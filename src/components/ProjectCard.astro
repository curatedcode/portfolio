---
import ExternalLink from "./ExternalLink.astro";
import { Icon } from "astro-icon";
export interface Props {
  title: string;
  imageUrl: string;
  description: string;
  techUsed: { name: string; url: string }[];
  githubUrl: string;
  liveUrl?: string;
  imageAlt: string;
}

const { title, imageUrl, description, techUsed, githubUrl, liveUrl, imageAlt } =
  Astro.props;
---

<div class="grid gap-2">
  <h2 class="text-site-blue-lightest">{title}</h2>
  <p>{description}</p>
  <div class="flex gap-2 my-1">
    {
      techUsed.map((tech) => (
        <ExternalLink
          className="text-emerald-400 text-sm py-1 bg-emerald-700 bg-opacity-20 rounded-full px-4 hover:bg-opacity-25 transition-all"
          href={tech.url}
        >
          {tech.name}
        </ExternalLink>
      ))
    }
  </div>
  <div class="grid auto-cols-min grid-cols-2 gap-4">
    <img alt={imageAlt} src={imageUrl} class="w-full max-w-md rounded-sm" />
    <div class="grid gap-2 auto-rows-min w-fit mt-2">
      <ExternalLink
        href={githubUrl}
        className="flex gap-1 items-center [&>*]:hover:text-site-blue-lightest [&>*]:transition-colors"
      >
        <Icon name="ri:github-fill" class="w-5" />
        <span>View source code</span>
      </ExternalLink>
      {
        liveUrl && (
          <ExternalLink
            href={liveUrl}
            className="flex gap-1 items-center [&>*]:hover:text-site-blue-lightest [&>*]:transition-colors"
          >
            <Icon name="mdi:web" class="w-5" />
            <span>View live site</span>
          </ExternalLink>
        )
      }
    </div>
  </div>
</div>
